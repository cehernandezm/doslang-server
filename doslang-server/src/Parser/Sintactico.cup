package Parser;

import java_cup.runtime.*;
import Analisis.*;
import Analisis.TipoDato.*;
import Componentes.*;
import java.util.LinkedList;

parser code
{:

	public static LinkedList<Instruccion> lista;

	

	public  void setLista(LinkedList<Instruccion> listaG){
		lista = listaG;
	}

	public  LinkedList<Instruccion> getLista(){
		return lista;
	}
	
	public static int cont=0;
	public void syntax_error(Symbol s){
        System.err.println("Error Sintáctico en la Línea " + (s.left) +" Columna "+s.right+ ". No se esperaba este componente: " +s.value+".");
	}

	 public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.err.println("Error síntactico irrecuperable en la Línea " + (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido.");
    }
:}

terminal UMENOS;
terminal MAS,MENOS,POR,DIVIDIDO;
terminal SALUDO,ID,ENTERO,DECIMAL;

non terminal inicio;

non terminal Expresion expresion;



//----------------------------------------------------------------------- PRECEDENCIA OPERADORES ------------------------------------------------------
precedence left MAS,MENOS;
precedence left POR,DIVIDIDO;
precedence right UMENOS;


start with inicio;


inicio ::=  expresion : a 													{: 
																				LinkedList<Instruccion> ins = new LinkedList<Instruccion>();
																				ins.addLast(a);	
																				parser.lista = ins; 
																			:} 
		  	;


expresion ::=	expresion:a MAS expresion:b 											 {: RESULT = new Expresion(a,b,Operacion.SUMA,aleft,aright);  :} 
			|	expresion MENOS expresion
			| 	expresion POR expresion
			| 	expresion DIVIDIDO expresion 
			| 	ENTERO:a 																 {: RESULT = new Expresion(a,Tipo.INT,aleft,aright); :}
			| 	DECIMAL
			;


